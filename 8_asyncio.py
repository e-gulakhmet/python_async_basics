# Как работают коротины:
# 1. Event loop берет из очереди первую задачу task
# 2. вызывается метод степ у короутины, которая связанная с этой задачей,
# 3. Короутина выполняет свой код
# 4. Если короутина вызавает другую короутину, то она приостанавливает свой код и контроль выполнения переходит
# в вызванной короутине.
# 5. Если короутина вызвает блокирующую фунцию, то она также приостанавливается, но контроль выполнения обратно
# возвращается в собитийный цикл
# 6. Событийный цикл переходит к п.1, где берет следующую задачу
# 7. Когда событийный цикл снова доходит до 1 задачи, то короутина которая привязана к данной задаче продолжает свою
# работу с того момента, на котором она остановилась в прошлый раз

import asyncio


async def print_nums():
    num = 1
    while True:
        print('Новое число', num)
        num += 1
        await asyncio.sleep(0.1)


async def print_time():
    count = 0
    while True:
        if count % 3 == 0:
            print(f'{count} seconds have passed')
        count += 1
        await asyncio.sleep(1)


async def main():
    task_1 = asyncio.create_task(print_nums())
    task_2 = asyncio.create_task(print_time())

    await asyncio.gather(task_1, task_2)


if __name__ == '__main__':
    asyncio.run(main())
